{"version":3,"sources":["meteor://ðŸ’»app/methods/methods.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","watch","require","v","methods","agregarPelicula","titulo","Peliculas","insert","createdAt","Date","owner","userId","actualizarPelicula","id","checked","pel","findOne","Error","update","$set","eliminarPelicula","remove","setPrivate","private","Mongo","Collection","startup","publish","find","$or","$ne"],"mappings":";;;;;;;;AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAEXJ,OAAOK,OAAP,CAAe;AACbC,mBAAiB,UAASC,MAAT,EAAiB;AAChCC,cAAUC,MAAV,CAAiB;AACfF,cAAQA,MADO;AAEfG,iBAAW,IAAIC,IAAJ,EAFI;AAGfC,aAAOZ,OAAOa,MAAP;AAHQ,KAAjB;AAKD,GAPY;AAQbC,sBAAoB,UAASC,EAAT,EAAaC,OAAb,EAAsB;AACxC,QAAIC,MAAMT,UAAUU,OAAV,CAAkBH,EAAlB,CAAV;;AAEA,QAAIE,IAAIL,KAAJ,KAAcZ,OAAOa,MAAP,EAAlB,EAAmC;AACjC,YAAM,IAAIb,OAAOmB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDX,cAAUY,MAAV,CAAiBL,EAAjB,EAAqB;AAACM,YAAM;AAACL,iBAASA;AAAV;AAAP,KAArB;AACD,GAhBY;AAiBbM,oBAAkB,UAASP,EAAT,EAAa;AAC7B,QAAIE,MAAMT,UAAUU,OAAV,CAAkBH,EAAlB,CAAV;;AAEA,QAAIE,IAAIL,KAAJ,KAAcZ,OAAOa,MAAP,EAAlB,EAAmC;AACjC,YAAM,IAAIb,OAAOmB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDX,cAAUe,MAAV,CAAiBR,EAAjB;AACD,GAzBY;AA0BbS,cAAY,UAAST,EAAT,EAAaU,OAAb,EAAsB;AAChC,QAAIR,MAAMT,UAAUU,OAAV,CAAkBH,EAAlB,CAAV;;AAEA,QAAIE,IAAIL,KAAJ,KAAcZ,OAAOa,MAAP,EAAlB,EAAmC;AACjC,YAAM,IAAIb,OAAOmB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDX,cAAUY,MAAV,CAAiBL,EAAjB,EAAqB;AAACM,YAAM;AAACI,iBAASA;AAAV;AAAP,KAArB;AACD;AAlCY,CAAf,E;;;;;;;;;;;ACFA,IAAIzB,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAEXI,YAAY,IAAIkB,MAAMC,UAAV,CAAqB,WAArB,CAAZ;AAEA3B,OAAO4B,OAAP,CAAe,MAAM,CACnB;AACD,CAFD;AAIA5B,OAAO6B,OAAP,CAAe,WAAf,EAA4B,YAAW;AACrC,SAAOrB,UAAUsB,IAAV,CAAe;AACpBC,SAAK,CACH;AAAEN,eAAS;AAACO,aAAK;AAAN;AAAX,KADG,EAEH;AAAEpB,aAAO,KAAKC;AAAd,KAFG;AADe,GAAf,CAAP;AAMD,CAPD,E","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n  agregarPelicula: function(titulo) {\n    Peliculas.insert({\n      titulo: titulo,\n      createdAt: new Date(),\n      owner: Meteor.userId()\n    });\n  },\n  actualizarPelicula: function(id, checked) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Peliculas.update(id, {$set: {checked: checked}});\n  },\n  eliminarPelicula: function(id) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Peliculas.remove(id);\n  },\n  setPrivate: function(id, private) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Peliculas.update(id, {$set: {private: private}});\n  }\n});\n","import { Meteor } from 'meteor/meteor';\n\nPeliculas = new Mongo.Collection('peliculas');\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nMeteor.publish('peliculas', function() {\n  return Peliculas.find({\n    $or: [\n      { private: {$ne: true} },\n      { owner: this.userId }\n    ]\n  });\n});\n"]}