[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nGoogle = Package['google-oauth'].Google;\nGithub = Package['github-oauth'].Github;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"methods\":{\"methods.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// methods/methods.js                                                //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n  Meteor: function (v) {                                             // 1\n    Meteor = v;                                                      // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\nMeteor.methods({                                                     // 3\n  agregarPelicula: function (titulo) {                               // 4\n    Peliculas.insert({                                               // 5\n      titulo: titulo,                                                // 6\n      createdAt: new Date(),                                         // 7\n      owner: Meteor.userId()                                         // 8\n    });                                                              // 5\n  },                                                                 // 10\n  actualizarPelicula: function (id, checked) {                       // 11\n    var pel = Peliculas.findOne(id);                                 // 12\n                                                                     //\n    if (pel.owner !== Meteor.userId()) {                             // 14\n      throw new Meteor.Error('not-authorized');                      // 15\n    }                                                                // 16\n                                                                     //\n    Peliculas.update(id, {                                           // 18\n      $set: {                                                        // 18\n        checked: checked                                             // 18\n      }                                                              // 18\n    });                                                              // 18\n  },                                                                 // 19\n  eliminarPelicula: function (id) {                                  // 20\n    var pel = Peliculas.findOne(id);                                 // 21\n                                                                     //\n    if (pel.owner !== Meteor.userId()) {                             // 23\n      throw new Meteor.Error('not-authorized');                      // 24\n    }                                                                // 25\n                                                                     //\n    Peliculas.remove(id);                                            // 27\n  },                                                                 // 28\n  setPrivate: function (id, private) {                               // 29\n    var pel = Peliculas.findOne(id);                                 // 30\n                                                                     //\n    if (pel.owner !== Meteor.userId()) {                             // 32\n      throw new Meteor.Error('not-authorized');                      // 33\n    }                                                                // 34\n                                                                     //\n    Peliculas.update(id, {                                           // 36\n      $set: {                                                        // 36\n        \"private\": private                                           // 36\n      }                                                              // 36\n    });                                                              // 36\n  }                                                                  // 37\n});                                                                  // 3\n///////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// client/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Template = void 0;                                               // 1\nmodule.watch(require(\"meteor/templating\"), {                         // 1\n  Template: function (v) {                                           // 1\n    Template = v;                                                    // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\nvar ReactiveVar = void 0;                                            // 1\nmodule.watch(require(\"meteor/reactive-var\"), {                       // 1\n  ReactiveVar: function (v) {                                        // 1\n    ReactiveVar = v;                                                 // 1\n  }                                                                  // 1\n}, 1);                                                               // 1\nvar Accounts = void 0;                                               // 1\nmodule.watch(require(\"meteor/accounts-base\"), {                      // 1\n  Accounts: function (v) {                                           // 1\n    Accounts = v;                                                    // 1\n  }                                                                  // 1\n}, 2);                                                               // 1\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n  Meteor: function (v) {                                             // 1\n    Meteor = v;                                                      // 1\n  }                                                                  // 1\n}, 3);                                                               // 1\nmodule.watch(require(\"./main.html\"));                                // 1\nPeliculas = new Mongo.Collection('peliculas');                       // 8\nMeteor.subscribe('peliculas');                                       // 10\nTemplate.body.helpers({                                              // 12\n  peliculas: function () {                                           // 13\n    if (Session.get('hideFinished')) {                               // 14\n      return Peliculas.find({                                        // 15\n        checked: {                                                   // 15\n          $ne: true                                                  // 15\n        }                                                            // 15\n      });                                                            // 15\n    } else {                                                         // 16\n      return Peliculas.find();                                       // 17\n    }                                                                // 18\n  },                                                                 // 19\n  hideFinished: function () {                                        // 20\n    return Session.get('hideFinished');                              // 21\n  }                                                                  // 22\n});                                                                  // 12\nTemplate.body.events({                                               // 25\n  'submit .nueva-pelicula': function (event) {                       // 26\n    var titulo = event.target.titulo.value;                          // 27\n    Meteor.call('agregarPelicula', titulo);                          // 29\n    event.target.titulo.value = '';                                  // 31\n    return false;                                                    // 32\n  },                                                                 // 33\n  'change .hide-finished': function (event) {                        // 34\n    Session.set('hideFinished', event.target.checked);               // 35\n  }                                                                  // 36\n});                                                                  // 25\nTemplate.pelicula.helpers({                                          // 39\n  isOwner: function () {                                             // 40\n    return this.owner === Meteor.userId();                           // 41\n  }                                                                  // 42\n});                                                                  // 39\nTemplate.pelicula.events({                                           // 45\n  'click .toggle-checked': function () {                             // 46\n    Meteor.call('actualizarPelicula', this._id, !this.checked);      // 47\n  },                                                                 // 48\n  'click .delete': function () {                                     // 49\n    Meteor.call('eliminarPelicula', this._id);                       // 50\n  },                                                                 // 51\n  'click .toggle-private': function () {                             // 52\n    Meteor.call('setPrivate', this._id, !this.private);              // 53\n  }                                                                  // 54\n});                                                                  // 45\nAccounts.ui.config({                                                 // 57\n  passwordSignupFields: \"USERNAME_ONLY\"                              // 58\n});                                                                  // 57\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"./methods/methods.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["methods/methods.js","client/main.js"],"names":["Meteor","module","watch","require","v","methods","agregarPelicula","titulo","Peliculas","insert","createdAt","Date","owner","userId","actualizarPelicula","id","checked","pel","findOne","Error","update","$set","eliminarPelicula","remove","setPrivate","private","Template","ReactiveVar","Accounts","Mongo","Collection","subscribe","body","helpers","peliculas","Session","get","find","$ne","hideFinished","events","event","target","value","call","set","pelicula","isOwner","_id","ui","config","passwordSignupFields"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n  agregarPelicula: function(titulo) {\n    Peliculas.insert({\n      titulo: titulo,\n      createdAt: new Date(),\n      owner: Meteor.userId()\n    });\n  },\n  actualizarPelicula: function(id, checked) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n    \n    Peliculas.update(id, {$set: {checked: checked}});\n  },\n  eliminarPelicula: function(id) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Peliculas.remove(id);\n  },\n  setPrivate: function(id, private) {\n    var pel = Peliculas.findOne(id);\n\n    if (pel.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Peliculas.update(id, {$set: {private: private}});\n  }\n});\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport './main.html';\n\nPeliculas = new Mongo.Collection('peliculas');\n\nMeteor.subscribe('peliculas');\n\nTemplate.body.helpers({\n  peliculas: function () {\n    if (Session.get('hideFinished')) {\n      return Peliculas.find({checked: {$ne: true}});\n    } else {\n      return Peliculas.find();\n    }\n  },\n  hideFinished: function() {\n    return Session.get('hideFinished');\n  }\n});\n\nTemplate.body.events({\n  'submit .nueva-pelicula': function(event) {\n    const titulo = event.target.titulo.value;\n\n    Meteor.call('agregarPelicula', titulo);\n\n    event.target.titulo.value = '';\n    return false;\n  },\n  'change .hide-finished': function(event) {\n    Session.set('hideFinished', event.target.checked);\n  }\n});\n\nTemplate.pelicula.helpers({\n  isOwner: function() {\n    return this.owner === Meteor.userId();\n  }\n});\n\nTemplate.pelicula.events({\n  'click .toggle-checked': function(){\n    Meteor.call('actualizarPelicula', this._id, !this.checked);\n  },\n  'click .delete': function() {\n    Meteor.call('eliminarPelicula', this._id);\n  },\n  'click .toggle-private': function(){\n    Meteor.call('setPrivate', this._id, !this.private);\n  }\n});\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_ONLY\"\n});\n"]}}]