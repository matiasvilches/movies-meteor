{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/accounts-github/github.js","filenameRelative":"packages/accounts-github/github.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/accounts-github/github.js.map","sourceFileName":"packages/accounts-github/github.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"github"},"ignored":false,"code":"Accounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = function (options, callback) {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n\n  Meteor.loginWithGithub = function () {\n    return Accounts.applyLoginFunction('github', arguments);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}","map":{"version":3,"sources":["packages/accounts-github/github.js"],"names":["Accounts","oauth","registerService","Meteor","isClient","loginWithGithub","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Github","requestCredential","registerClientLoginFunction","applyLoginFunction","arguments","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":"AAAAA,SAASC,KAAT,CAAeC,eAAf,CAA+B,QAA/B;;AAEA,IAAIC,OAAOC,QAAX,EAAqB;AACnB,QAAMC,kBAAkB,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AAClD;AACA,QAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,iBAAWD,OAAX;AACAA,gBAAU,IAAV;AACD;;AAED,QAAIE,oCAAoCR,SAASC,KAAT,CAAeQ,gCAAf,CAAgDF,QAAhD,CAAxC;AACAG,WAAOC,iBAAP,CAAyBL,OAAzB,EAAkCE,iCAAlC;AACD,GATD;;AAUAR,WAASY,2BAAT,CAAqC,QAArC,EAA+CP,eAA/C;;AACAF,SAAOE,eAAP,GAAyB,YAAY;AACnC,WAAOL,SAASa,kBAAT,CAA4B,QAA5B,EAAsCC,SAAtC,CAAP;AACD,GAFD;AAGD,CAfD,MAeO;AACLd,WAASe,oBAAT,CAA8B;AAC5B;AACA;AACA;AACAC,qBAAiB,CAAC,iBAAD,CAJW;AAK5BC,mBAAe,CAAC,0BAAD;AALa,GAA9B;AAOD","file":"packages/accounts-github/github.js.map","sourcesContent":["Accounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = function(options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n  Meteor.loginWithGithub = function () {\n    return Accounts.applyLoginFunction('github', arguments);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n"]},"hash":"263426c9aff89d7b6c95ae457c19c4698a51cafe"}
