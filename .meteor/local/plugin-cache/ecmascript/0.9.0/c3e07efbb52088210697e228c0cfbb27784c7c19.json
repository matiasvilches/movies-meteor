{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/main.js","filenameRelative":"client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/main.js.map","sourceFileName":"client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar Accounts = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 2);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nmodule.watch(require(\"./main.html\"));\nPeliculas = new Mongo.Collection('peliculas');\nMeteor.subscribe('peliculas');\nTemplate.body.helpers({\n  peliculas: function () {\n    if (Session.get('hideFinished')) {\n      return Peliculas.find({\n        checked: {\n          $ne: true\n        }\n      });\n    } else {\n      return Peliculas.find();\n    }\n  },\n  hideFinished: function () {\n    return Session.get('hideFinished');\n  }\n});\nTemplate.body.events({\n  'submit .nueva-pelicula': function (event) {\n    var titulo = event.target.titulo.value;\n    Meteor.call('agregarPelicula', titulo);\n    event.target.titulo.value = '';\n    return false;\n  },\n  'change .hide-finished': function (event) {\n    Session.set('hideFinished', event.target.checked);\n  }\n});\nTemplate.pelicula.helpers({\n  isOwner: function () {\n    this.owner === Meteor.userId();\n  }\n});\nTemplate.pelicula.events({\n  'click .toggle-checked': function () {\n    Meteor.call('actualizarPelicula', this._id, !this.checked);\n  },\n  'click .delete': function () {\n    Meteor.call('eliminarPelicula', this._id);\n  }\n});\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_ONLY\"\n});","map":{"version":3,"sources":["client/main.js"],"names":["Template","module","watch","require","v","ReactiveVar","Accounts","Meteor","Peliculas","Mongo","Collection","subscribe","body","helpers","peliculas","Session","get","find","checked","$ne","hideFinished","events","event","titulo","target","value","call","set","pelicula","isOwner","owner","userId","_id","ui","config","passwordSignupFields"],"mappings":"AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,UAAD,YAAUI,CAAV,EAAY;AAACJ,eAASI,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIC,oBAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAACE,aAAD,YAAaD,CAAb,EAAe;AAACC,kBAAYD,CAAZ;AAAc;AAA9B,CAA5C,EAA4E,CAA5E;AAA+E,IAAIE,iBAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,UAAD,YAAUF,CAAV,EAAY;AAACE,eAASF,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;AAA0E,IAAIG,eAAJ;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACI,QAAD,YAAQH,CAAR,EAAU;AAACG,aAAOH,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+DH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAOpVK,YAAY,IAAIC,MAAMC,UAAV,CAAqB,WAArB,CAAZ;AAEAH,OAAOI,SAAP,CAAiB,WAAjB;AAEAX,SAASY,IAAT,CAAcC,OAAd,CAAsB;AACpBC,aAAW,YAAY;AACrB,QAAIC,QAAQC,GAAR,CAAY,cAAZ,CAAJ,EAAiC;AAC/B,aAAOR,UAAUS,IAAV,CAAe;AAACC,iBAAS;AAACC,eAAK;AAAN;AAAV,OAAf,CAAP;AACD,KAFD,MAEO;AACL,aAAOX,UAAUS,IAAV,EAAP;AACD;AACF,GAPmB;AAQpBG,gBAAc,YAAW;AACvB,WAAOL,QAAQC,GAAR,CAAY,cAAZ,CAAP;AACD;AAVmB,CAAtB;AAaAhB,SAASY,IAAT,CAAcS,MAAd,CAAqB;AACnB,4BAA0B,UAASC,KAAT,EAAgB;AACxC,QAAMC,SAASD,MAAME,MAAN,CAAaD,MAAb,CAAoBE,KAAnC;AAEAlB,WAAOmB,IAAP,CAAY,iBAAZ,EAA+BH,MAA/B;AAEAD,UAAME,MAAN,CAAaD,MAAb,CAAoBE,KAApB,GAA4B,EAA5B;AACA,WAAO,KAAP;AACD,GARkB;AASnB,2BAAyB,UAASH,KAAT,EAAgB;AACvCP,YAAQY,GAAR,CAAY,cAAZ,EAA4BL,MAAME,MAAN,CAAaN,OAAzC;AACD;AAXkB,CAArB;AAcAlB,SAAS4B,QAAT,CAAkBf,OAAlB,CAA0B;AACxBgB,WAAS,YAAW;AAClB,SAAKC,KAAL,KAAevB,OAAOwB,MAAP,EAAf;AACD;AAHuB,CAA1B;AAMA/B,SAAS4B,QAAT,CAAkBP,MAAlB,CAAyB;AACvB,2BAAyB,YAAU;AACjCd,WAAOmB,IAAP,CAAY,oBAAZ,EAAkC,KAAKM,GAAvC,EAA4C,CAAC,KAAKd,OAAlD;AACD,GAHsB;AAIvB,mBAAiB,YAAW;AAC1BX,WAAOmB,IAAP,CAAY,kBAAZ,EAAgC,KAAKM,GAArC;AACD;AANsB,CAAzB;AASA1B,SAAS2B,EAAT,CAAYC,MAAZ,CAAmB;AACjBC,wBAAsB;AADL,CAAnB","file":"client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport './main.html';\n\nPeliculas = new Mongo.Collection('peliculas');\n\nMeteor.subscribe('peliculas');\n\nTemplate.body.helpers({\n  peliculas: function () {\n    if (Session.get('hideFinished')) {\n      return Peliculas.find({checked: {$ne: true}});\n    } else {\n      return Peliculas.find();\n    }\n  },\n  hideFinished: function() {\n    return Session.get('hideFinished');\n  }\n});\n\nTemplate.body.events({\n  'submit .nueva-pelicula': function(event) {\n    const titulo = event.target.titulo.value;\n\n    Meteor.call('agregarPelicula', titulo);\n\n    event.target.titulo.value = '';\n    return false;\n  },\n  'change .hide-finished': function(event) {\n    Session.set('hideFinished', event.target.checked);\n  }\n});\n\nTemplate.pelicula.helpers({\n  isOwner: function() {\n    this.owner === Meteor.userId();\n  }\n});\n\nTemplate.pelicula.events({\n  'click .toggle-checked': function(){\n    Meteor.call('actualizarPelicula', this._id, !this.checked);\n  },\n  'click .delete': function() {\n    Meteor.call('eliminarPelicula', this._id);\n  }\n});\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_ONLY\"\n});\n"]},"hash":"c3e07efbb52088210697e228c0cfbb27784c7c19"}
